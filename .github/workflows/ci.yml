name: CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        name: [macos-latest, ubuntu-latest-clang, ubuntu-latest-gcc]
        include:
          - name: macos-latest
            cmake_prefix_path: /usr/local/opt/qt/lib/cmake
            os: macos-latest
            path: /usr/local/opt/ccache/libexec
          - name: ubuntu-latest-clang
            cc: clang
            cxx: clang++
            os: ubuntu-latest
            path: /usr/lib/ccache
          - name: ubuntu-latest-gcc
            cc: gcc
            cxx: g++
            os: ubuntu-latest
            path: /usr/lib/ccache
    env:
      CC: ${{ matrix.cc }}
      CMAKE_PREFIX_PATH: ${{ matrix.cmake_prefix_path }}
      CXX: ${{ matrix.cxx }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - if: matrix.os == 'macos-latest'
        name: Set up Tap
        run: |
          brew tap roboticslibrary/rl
      - if: matrix.os == 'ubuntu-latest'
        name: Set up PPA
        run: |
          sudo apt-get install -y software-properties-common
          sudo apt-add-repository -y -u ppa:roblib/ppa
      - if: matrix.os == 'macos-latest'
        name: Install dependencies for macOS
        run: >
          brew install
          boost
          bullet
          ccache
          cmake
          coin
          eigen
          fcl
          ninja
          nlopt
          ode
          pqp
          qt
          solid
          soqt
      - if: matrix.os == 'ubuntu-latest'
        name: Install dependencies for Ubuntu
        run: >
          sudo apt-get install -y
          build-essential
          ccache
          clang
          cmake
          libboost-dev
          libbullet-dev
          libcomedi-dev
          libdc1394-22-dev
          libeigen3-dev
          libfcl-dev
          libnlopt-dev
          libode-dev
          libsimage-dev
          libsolid3d-dev
          libsoqt-dev
          libxml2-dev
          libxslt1-dev
          ninja-build
      - name: Update environment variables
        run: |
          echo "CCACHE_BASEDIR=${{ runner.workspace }}" >> $GITHUB_ENV
          echo "CCACHE_DIR=${{ runner.workspace }}/.ccache" >> $GITHUB_ENV
          echo "${{ matrix.path }}" >> $GITHUB_PATH
      - name: Cache compiler
        uses: actions/cache@v2
        with:
          path: ${{ runner.workspace }}/.ccache
          key: ${{ matrix.name }}-ccache
      - name: Configure CMake
        run: >
          cmake
          -G Ninja
          -D CMAKE_BUILD_TYPE=RelWithDebInfo
          -S $GITHUB_WORKSPACE
          -B $RUNNER_WORKSPACE/rl-build
      - name: Build
        working-directory: ${{ runner.workspace }}/rl-build
        run: cmake --build .
      - name: Test
        working-directory: ${{ runner.workspace }}/rl-build
        run: ctest --output-on-failure
